#  stat_smooth(size = 1, linetype = 2, color = 'black') +
#  scale_color_manual(values = c('(2,5]' = 'skyblue', '(5,8]' = 'maroon'),
#                     name = 'quality', labels = c('low', 'high'))
# ggplot(aes(x = quality, y = density), data = redwines) +
#  geom_point(alpha = 1/2, aes(color = quality)) +
#  geom_line(stat = 'summary', fun.y = median, size = 1, linetype = 2) +
#  geom_hline(yintercept = quantile(redwines$density, .25)) +
#  geom_hline(yintercept = quantile(redwines$density, .75)) +
#  scale_color_gradient(low = 'skyblue', high = 'maroon') +
#  scale_x_discrete(limits=c(seq(3,8)))
redwines.filter_density <- subset(redwines, density <= quantile(
redwines$density, .25) | density >= quantile(redwines$density, .75))
ggplot(aes(x = quality), data = redwines.filter_density) +
geom_histogram(bins = 6,color = 'black', aes(fill = cut(quality, c(2,5,8)))) +
scale_fill_manual(name = 'quality',
values = c('(2,5]' = 'skyblue',
'(5,8]' = 'maroon'),
labels = c('low', 'high')
) +
ggtitle('Wine Quality: High Alcohol, Low Volatile Acids, and Density Filter')+
scale_x_continuous(breaks=seq(3,8))
ggplot(aes(x = quality, y = volatile.acidity), data = redwines) +
geom_point(alpha = 1/2, aes(color = quality)) +
geom_line(stat = 'summary', fun.y = median, size = 1.5, linetype = 2)
# Percent wines with HIGH 'alcohol', LOW 'volatile.acidity', and density filter
sum(redwines.alc_va_median_filter_density$quality >= '3') /
sum(redwines$quality >= '3')
# Percent HIGH 'quality' wines with HIGH 'alcohol', LOW 'volatile.acidity', and
# density filter
sum(redwines.alc_va_median_filter_density$quality >= '6') /
sum(redwines.alc_va_median_filter_density$quality >= '3')
knitr::opts_chunk$set(echo=FALSE, warning=FALSE, message=FALSE)
setwd('/home/david/Desktop/DataAnalysisProjects/RedWineData')
redwines_full <- read.csv('wineQualityReds.csv')
library(ggplot2)
library(GGally)
library(plyr)
library(gridExtra)
library(grid)
library(psych)
library(corrplot)
# Take out count from redwines_full
redwines <- subset(redwines_full, select = -c(X))
# List structure of redwines
str(redwines)
# generates single-variable redwines ggplot
create_plot <- function(varname) {
return(ggplot(aes_string(x = varname), data = redwines))
}
# creates single-variable histogram
create_hist <- function(varname, binwidth = .1) {
create_plot(varname) + geom_histogram(binwidth = binwidth)
}
# creates single-variable bar plot
create_bar <- function(varname, binwidth = .1) {
create_plot(varname) + geom_bar()
}
create_hist('fixed.acidity')
summary(redwines[1])
create_hist('volatile.acidity', 0.02)
summary(redwines[2])
create_hist('citric.acid', 0.01)
summary(redwines[3])
create_hist('residual.sugar')
create_hist('residual.sugar', .02) + scale_x_log10() + annotation_logticks()
summary(redwines[4])
create_hist('chlorides', 0.01)
create_hist('chlorides', 0.01) + scale_x_log10() + annotation_logticks()
summary(redwines[5])
create_hist('free.sulfur.dioxide', 1)
create_hist('free.sulfur.dioxide') + scale_x_log10() + annotation_logticks()
summary(redwines[6])
create_hist('total.sulfur.dioxide', 5)
create_hist('total.sulfur.dioxide', .1) + scale_x_log10() + annotation_logticks()
summary(redwines[7])
create_hist('density', .0005)
summary(redwines[8])
create_hist('pH', 0.05)
summary(redwines[9])
create_hist('sulphates', 0.05)
create_hist('sulphates', 0.05) + scale_x_log10() + annotation_logticks()
summary(redwines[10])
create_hist('alcohol')
create_hist('alcohol', .01) + scale_x_log10() + annotation_logticks()
summary(redwines[11])
create_hist('quality', 1)
summary(redwines[12])
redwines_corr <- cor(redwines)
corrplot(redwines_corr, type='lower')
# subset quality with volatile.acidity
redwines.sub <- redwines[, c(2,11,12)]
pairs.panels(redwines.sub)
# Change quality to a factor to categorize values
redwines$quality <- as.factor(redwines$quality)
ggplot(redwines, aes(quality, alcohol)) +
geom_boxplot()
ggplot(redwines, aes(quality, volatile.acidity)) +
geom_boxplot()
redwines.sub <- redwines[, c(3,4,5,6,7,8,9,10,12)]
pairs.panels(redwines.sub)
ggplot(redwines, aes(quality, citric.acid)) +
geom_boxplot()
ggplot(redwines, aes(quality, density)) +
geom_boxplot()
ggplot(redwines, aes(quality, pH)) +
geom_boxplot()
ggplot(redwines, aes(quality, sulphates)) +
geom_boxplot()
ggplot(aes(y = volatile.acidity, x = alcohol), data = redwines) +
geom_jitter(alpha = 1/2, aes(color = quality))
ggplot(aes(x = quality, y = volatile.acidity), data = redwines) +
geom_point(alpha = 1/2, aes(color = quality)) +
geom_line(stat = 'summary', fun.y = median, size = 1.5, linetype = 2)
# redwines.alc_va_median <- subset(redwines, alcohol >= median(alcohol) &
#                                    volatile.acidity <= median(volatile.acidity))
# ggplot(aes(x = quality), data = redwines.alc_va_median) +
#  geom_histogram(bins = 5, color = 'black', aes(fill = cut(quality, c(2,5,8))))+
#  scale_fill_manual(name = 'quality',
#                      values = c('(2,5]' = 'skyblue',
#                                 '(5,8]' = 'maroon'),
#                      labels = c('Low', 'High')) +
#  ggtitle('Wine Quality: High Alcohol and Low Volatile Acids')
# Percent wines with HIGH 'alcohol' and LOW 'volatile.acidity'
sum(redwines.alc_va_median$quality >= '3')  / sum(redwines$quality >= '3')
# Percent HIGH 'quality' wines with HIGH 'alcohol' and LOW 'volatile.acidity'
sum(redwines.alc_va_median$quality >= '6') / sum(redwines.alc_va_median$quality
>= '3')
pairs.panels(redwines[9:12])
# ggplot(aes(x = alcohol, y = density), data = redwines) +
#  geom_point(alpha = 1/2, aes(color = cut(quality, c(2,5,8)))) +
#  stat_smooth(size = 1, linetype = 2, color = 'black') +
#  scale_color_manual(values = c('(2,5]' = 'skyblue', '(5,8]' = 'maroon'),
#                     name = 'quality', labels = c('low', 'high'))
# ggplot(aes(x = quality, y = density), data = redwines) +
#  geom_point(alpha = 1/2, aes(color = quality)) +
#  geom_line(stat = 'summary', fun.y = median, size = 1, linetype = 2) +
#  geom_hline(yintercept = quantile(redwines$density, .25)) +
#  geom_hline(yintercept = quantile(redwines$density, .75)) +
#  scale_color_gradient(low = 'skyblue', high = 'maroon') +
#  scale_x_discrete(limits=c(seq(3,8)))
#redwines.filter_density <- subset(redwines, density <= quantile(
#  redwines$density, .25) | density >= quantile(redwines$density, .75))
#ggplot(aes(x = quality), data = redwines.filter_density) +
#  geom_histogram(bins = 6,color = 'black', aes(fill = cut(quality, c(2,5,8)))) +
#  scale_fill_manual(name = 'quality',
#                    values = c('(2,5]' = 'skyblue',
#                                 '(5,8]' = 'maroon'),
#                    labels = c('low', 'high')
#                    ) +
#  ggtitle('Wine Quality: High Alcohol, Low Volatile Acids, and Density Filter')+
#  scale_x_continuous(breaks=seq(3,8))
#redwines.alc_va_median_filter_density <- subset(
#  redwines.alc_va_median, density <= quantile(redwines$density, .25) |
#    density >= quantile(redwines$density, .75))
#ggplot(aes(x = quality), data = redwines.alc_va_median_filter_density) +
#  geom_histogram(bins = 5,color = 'black', aes(fill = cut(quality, c(2,5,8)))) +
#  scale_fill_manual(name = 'quality',
#                    values = c('(2,5]' = 'skyblue',
#                                 '(5,8]' = 'maroon'),
#                    labels = c('Low', 'High')
#                    ) +
#  ggtitle('Wine Quality: High Alcohol, Low Volatile Acids, and Density Filter')+
#  scale_x_continuous(breaks=seq(3,8))
# Percent wines with HIGH 'alcohol', LOW 'volatile.acidity', and density filter
sum(redwines.alc_va_median_filter_density$quality >= '3') /
sum(redwines$quality >= '3')
# Percent HIGH 'quality' wines with HIGH 'alcohol', LOW 'volatile.acidity', and
# density filter
sum(redwines.alc_va_median_filter_density$quality >= '6') /
sum(redwines.alc_va_median_filter_density$quality >= '3')
# Percent wines with HIGH 'alcohol' and LOW 'volatile.acidity'
sum(redwines.alc_va_median$quality >= '3')  / sum(redwines$quality >= '3')
redwines_corr <- cor(redwines)
redwines_corr <- cor(redwines)
redwines_corr <- cor(redwines)
redwines_corr <- cor(redwines)
# Take out count from redwines_full
redwines <- subset(redwines_full, select = -c(X))
# List structure of redwines
str(redwines)
redwines_corr <- cor(redwines)
corrplot(redwines_corr, type='lower')
redwines_corr <- cor(redwines)
corrplot(redwines_corr, type='lower', title = "Correlation Chart")
redwines_corr <- cor(redwines)
corrplot(redwines_corr, type='lower')
knitr::opts_chunk$set(echo=FALSE, warning=FALSE, message=FALSE)
setwd('/home/david/Desktop/DataAnalysisProjects/RedWineData')
redwines_full <- read.csv('wineQualityReds.csv')
library(ggplot2)
library(GGally)
library(plyr)
library(gridExtra)
library(grid)
library(psych)
library(corrplot)
# Take out count from redwines_full
redwines <- subset(redwines_full, select = -c(X))
# List structure of redwines
str(redwines)
# generates single-variable redwines ggplot
create_plot <- function(varname) {
return(ggplot(aes_string(x = varname), data = redwines))
}
# creates single-variable histogram
create_hist <- function(varname, binwidth = .1) {
create_plot(varname) + geom_histogram(binwidth = binwidth)
}
# creates single-variable bar plot
create_bar <- function(varname, binwidth = .1) {
create_plot(varname) + geom_bar()
}
create_hist('fixed.acidity')
summary(redwines[1])
create_hist('volatile.acidity', 0.02)
summary(redwines[2])
create_hist('citric.acid', 0.01)
summary(redwines[3])
create_hist('residual.sugar')
create_hist('residual.sugar', .02) + scale_x_log10() + annotation_logticks()
summary(redwines[4])
create_hist('chlorides', 0.01)
create_hist('chlorides', 0.01) + scale_x_log10() + annotation_logticks()
summary(redwines[5])
create_hist('free.sulfur.dioxide', 1)
create_hist('free.sulfur.dioxide') + scale_x_log10() + annotation_logticks()
summary(redwines[6])
create_hist('total.sulfur.dioxide', 5)
create_hist('total.sulfur.dioxide', .1) + scale_x_log10() + annotation_logticks()
summary(redwines[7])
create_hist('density', .0005)
summary(redwines[8])
create_hist('pH', 0.05)
summary(redwines[9])
create_hist('sulphates', 0.05)
create_hist('sulphates', 0.05) + scale_x_log10() + annotation_logticks()
summary(redwines[10])
create_hist('alcohol')
create_hist('alcohol', .01) + scale_x_log10() + annotation_logticks()
summary(redwines[11])
create_hist('quality', 1)
summary(redwines[12])
redwines_corr <- cor(redwines)
corrplot(redwines_corr, type='lower')
# subset quality with volatile.acidity
redwines.sub <- redwines[, c(2,11,12)]
pairs.panels(redwines.sub)
# Change quality to a factor to categorize values
redwines$quality <- as.factor(redwines$quality)
ggplot(redwines, aes(quality, alcohol)) +
geom_boxplot()
ggplot(redwines, aes(quality, volatile.acidity)) +
geom_boxplot()
redwines.sub <- redwines[, c(3,4,5,6,7,8,9,10,12)]
pairs.panels(redwines.sub)
ggplot(redwines, aes(quality, citric.acid)) +
geom_boxplot()
ggplot(redwines, aes(quality, density)) +
geom_boxplot()
ggplot(redwines, aes(quality, pH)) +
geom_boxplot()
ggplot(redwines, aes(quality, sulphates)) +
geom_boxplot()
ggplot(aes(y = volatile.acidity, x = alcohol), data = redwines) +
geom_jitter(alpha = 1/2, aes(color = quality))
ggplot(aes(x = quality, y = volatile.acidity), data = redwines) +
geom_point(alpha = 1/2, aes(color = quality)) +
geom_line(stat = 'summary', fun.y = median, size = 1.5, linetype = 2)
# redwines.alc_va_median <- subset(redwines, alcohol >= median(alcohol) &
#                                    volatile.acidity <= median(volatile.acidity))
# ggplot(aes(x = quality), data = redwines.alc_va_median) +
#  geom_histogram(bins = 5, color = 'black', aes(fill = cut(quality, c(2,5,8))))+
#  scale_fill_manual(name = 'quality',
#                      values = c('(2,5]' = 'skyblue',
#                                 '(5,8]' = 'maroon'),
#                      labels = c('Low', 'High')) +
#  ggtitle('Wine Quality: High Alcohol and Low Volatile Acids')
# Percent wines with HIGH 'alcohol' and LOW 'volatile.acidity'
# sum(redwines.alc_va_median$quality >= '3')  / sum(redwines$quality >= '3')
# Percent HIGH 'quality' wines with HIGH 'alcohol' and LOW 'volatile.acidity'
# sum(redwines.alc_va_median$quality >= '6') / sum(redwines.alc_va_median$quality
#                                                 >= '3')
pairs.panels(redwines[9:12])
# ggplot(aes(x = alcohol, y = density), data = redwines) +
#  geom_point(alpha = 1/2, aes(color = cut(quality, c(2,5,8)))) +
#  stat_smooth(size = 1, linetype = 2, color = 'black') +
#  scale_color_manual(values = c('(2,5]' = 'skyblue', '(5,8]' = 'maroon'),
#                     name = 'quality', labels = c('low', 'high'))
# ggplot(aes(x = quality, y = density), data = redwines) +
#  geom_point(alpha = 1/2, aes(color = quality)) +
#  geom_line(stat = 'summary', fun.y = median, size = 1, linetype = 2) +
#  geom_hline(yintercept = quantile(redwines$density, .25)) +
#  geom_hline(yintercept = quantile(redwines$density, .75)) +
#  scale_color_gradient(low = 'skyblue', high = 'maroon') +
#  scale_x_discrete(limits=c(seq(3,8)))
#redwines.filter_density <- subset(redwines, density <= quantile(
#  redwines$density, .25) | density >= quantile(redwines$density, .75))
#ggplot(aes(x = quality), data = redwines.filter_density) +
#  geom_histogram(bins = 6,color = 'black', aes(fill = cut(quality, c(2,5,8)))) +
#  scale_fill_manual(name = 'quality',
#                    values = c('(2,5]' = 'skyblue',
#                                 '(5,8]' = 'maroon'),
#                    labels = c('low', 'high')
#                    ) +
#  ggtitle('Wine Quality: High Alcohol, Low Volatile Acids, and Density Filter')+
#  scale_x_continuous(breaks=seq(3,8))
#redwines.alc_va_median_filter_density <- subset(
#  redwines.alc_va_median, density <= quantile(redwines$density, .25) |
#    density >= quantile(redwines$density, .75))
#ggplot(aes(x = quality), data = redwines.alc_va_median_filter_density) +
#  geom_histogram(bins = 5,color = 'black', aes(fill = cut(quality, c(2,5,8)))) +
#  scale_fill_manual(name = 'quality',
#                    values = c('(2,5]' = 'skyblue',
#                                 '(5,8]' = 'maroon'),
#                    labels = c('Low', 'High')
#                    ) +
#  ggtitle('Wine Quality: High Alcohol, Low Volatile Acids, and Density Filter')+
#  scale_x_continuous(breaks=seq(3,8))
# Percent wines with HIGH 'alcohol', LOW 'volatile.acidity', and density filter
#sum(redwines.alc_va_median_filter_density$quality >= '3') /
#  sum(redwines$quality >= '3')
# Percent HIGH 'quality' wines with HIGH 'alcohol', LOW 'volatile.acidity', and
# density filter
#sum(redwines.alc_va_median_filter_density$quality >= '6') /
#  sum(redwines.alc_va_median_filter_density$quality >= '3')
ggplot(redwines, aes(quality, log10(sulphates))) +
geom_boxplot()
ggplot(redwines, aes(quality, (sulphates))) +
geom_boxplot()
ggplot(redwines, aes(quality, log10(sulphates))) +
geom_boxplot()
redwines.sub <- redwines[, c(5,7,10,12)]
pairs.panels(redwines.sub)
redwines$chlorides <- log10(redwines$chlorides)
redwines$total.sulfur.dioxide <- log10(redwines$total.sulfur.dioxide)
redwines$sulphates <- log10(redwines$sulphates)
redwines.sub <- redwines[, c(5,7,10,12)]
pairs.panels(redwines.sub)
# Take out count from redwines_full
redwines <- subset(redwines_full, select = -c(X))
# List structure of redwines
str(redwines)
redwines.sub <- redwines[, c(4,5,6,7,10,11,12)]
pairs.panels(redwines.sub)
redwines$residual.sugar <- log10(redwines$residual.sugar)
redwines$chlorides <- log10(redwines$chlorides)
redwines$free.sulfur.dioxide <- log10(redwines$free.sulfur.dioxide)
redwines$total.sulfur.dioxide <- log10(redwines$total.sulfur.dioxide)
redwines$sulphates <- log10(redwines$sulphates)
redwines$alcohol <- log10(redwines$alcohol)
redwines.sub <- redwines[, c(4,5,6,7,10,11,12)]
pairs.panels(redwines.sub)
ggplot(redwines, aes(quality, citric.acid)) +
geom_boxplot()
# Change quality to a factor to categorize values
redwines$quality <- as.factor(redwines$quality)
ggplot(redwines, aes(quality, alcohol)) +
geom_boxplot()
ggplot(redwines, aes(quality, citric.acid)) +
geom_boxplot()
ggplot(redwines, aes(pH, alcohol)) +
geom_boxplot()
ggplot(redwines, aes(pH, alcohol)) +
geom_point()
ggplot(redwines, aes(pH, alcohol)) +
geom_point(color = quality)
ggplot(redwines, aes(pH, alcohol), color = quality) +
geom_point()
ggplot(redwines, aes(pH, alcohol)) +
geom_point(aes(color = quality))
ggplot(redwines, aes(pH, alcohol)) +
geom_point(aes(color = quality)) +
scale_color_brewer()
ggplot(redwines, aes(pH, alcohol)) +
geom_point(aes(color = quality)) +
scale_color_brewer(type='div', palette=2)
ggplot(redwines, aes(pH, alcohol)) +
geom_point(aes(color = quality)) +
scale_color_brewer(type='seq', palette='Reds')
ggplot(redwines, aes(pH, alcohol)) +
geom_point(aes(color = quality)) +
scale_color_brewer(type='qual')
ggplot(aes(y = volatile.acidity, x = alcohol), data = redwines) +
geom_jitter(alpha = 1/2, aes(color = quality)) +
scale_color_brewer(type='qual')
ggplot(redwines, aes(pH, alcohol)) +
geom_point(aes(color = quality)) +
scale_color_brewer(type='qual')
ggplot(aes(y = volatile.acidity, x = alcohol), data = redwines) +
geom_jitter(alpha = 1/2, aes(color = quality)) +
scale_color_brewer(type='qual')
ggplot(redwines, aes(pH, alcohol)) +
geom_boxplot()
ggplot(redwines, aes(pH, alcohol)) +
geom_points()
ggplot(redwines, aes(pH, alcohol)) +
geom_point()
ggplot(redwines, aes(pH, alcohol)) +
geom_jitter()
ggplot(redwines, aes(density, alcohol)) +
geom_jitter()
ggplot(redwines, aes(volatile.acidity, citric.acid)) +
geom_jitter()
ggplot(redwines, aes(alcohol, density)) +
geom_jitter()
ggplot(redwines, aes(volatile.acidity, citric.acid)) +
geom_jitter()
ggplot(redwines, aes(quality, volatile.acidity)) +
geom_boxplot() +
stat_summary()
ggplot(redwines, aes(quality, volatile.acidity)) +
geom_boxplot() +
ggplot(redwines, aes(quality, volatile.acidity)) +
geom_boxplot()
ggplot(redwines, aes(quality, volatile.acidity)) +
geom_boxplot()
summary(ggplot(redwines, aes(quality, volatile.acidity)) +
geom_boxplot())
ggplot(redwines, aes(quality, log10(sulphates))) +
geom_boxplot()
summary(redwines[3]$quality)
ggplot(redwines, aes(quality, log10(sulphates))) +
geom_boxplot()
summary(redwines[1]$quality)
ggplot(redwines, aes(quality, log10(sulphates))) +
geom_boxplot()
summary(redwines[1])
ggplot(redwines, aes(quality, log10(sulphates))) +
geom_boxplot()
summary(redwines[1]$quality)
ggplot(redwines, aes(quality, log10(sulphates))) +
geom_boxplot()
summary(redwines$quality)
ggplot(redwines, aes(quality, log10(sulphates))) +
geom_boxplot()
describe.by(redwines[1], quality)
ggplot(redwines, aes(quality, log10(sulphates))) +
geom_boxplot()
describe.by(redwines[1], redwines$quality)
# Change quality to a factor to categorize values
redwines$quality <- as.factor(redwines$quality)
ggplot(redwines, aes(quality, alcohol)) +
geom_boxplot()
# Change quality to a factor to categorize values
redwines$quality <- as.factor(redwines$quality)
ggplot(redwines, aes(quality, alcohol)) +
geom_boxplot()
describe.by(redwines[11], redwines$quality)
# Change quality to a factor to categorize values
redwines$quality <- as.factor(redwines$quality)
ggplot(redwines, aes(quality, alcohol)) +
geom_boxplot()
describeBy(redwines[11], redwines$quality)
# Change quality to a factor to categorize values
redwines$quality <- as.factor(redwines$quality)
ggplot(redwines, aes(quality, alcohol)) +
geom_boxplot()
statsBy(redwines[11], redwines$quality)
# Change quality to a factor to categorize values
redwines$quality <- as.factor(redwines$quality)
ggplot(redwines, aes(quality, alcohol)) +
geom_boxplot()
statsBy(data = redwines[11], group = redwines$quality)
# Change quality to a factor to categorize values
redwines$quality <- as.factor(redwines$quality)
ggplot(redwines, aes(quality, alcohol)) +
geom_boxplot()
describeBy(redwines[11], redwines$quality)
# Change quality to a factor to categorize values
redwines$quality <- as.factor(redwines$quality)
ggplot(redwines, aes(quality, alcohol)) +
geom_boxplot()
summaryBy(redwines[11], redwines$quality)
# Change quality to a factor to categorize values
redwines$quality <- as.factor(redwines$quality)
ggplot(redwines, aes(quality, alcohol)) +
geom_boxplot()
library(doBy)
# Change quality to a factor to categorize values
redwines$quality <- as.factor(redwines$quality)
ggplot(redwines, aes(quality, alcohol)) +
geom_boxplot()
install.packages('doBy')
library(doBy)
summaryBy(redwines[11], redwines$quality)
# Change quality to a factor to categorize values
redwines$quality <- as.factor(redwines$quality)
ggplot(redwines, aes(quality, alcohol)) +
geom_boxplot()
install.packages('doBy')
library(doBy)
summaryBy(quality, data=redwines$alcohol)
install.packages("doBy")
# Change quality to a factor to categorize values
redwines$quality <- as.factor(redwines$quality)
ggplot(redwines, aes(quality, alcohol)) +
geom_boxplot()
summaryBy(quality, data=redwines$alcohol)
# Change quality to a factor to categorize values
redwines$quality <- as.factor(redwines$quality)
ggplot(redwines, aes(quality, alcohol)) +
geom_boxplot()
summaryBy(redwines$quality, data=redwines$alcohol)
# Change quality to a factor to categorize values
redwines$quality <- as.factor(redwines$quality)
ggplot(redwines, aes(quality, alcohol)) +
geom_boxplot()
summaryBy(redwines[12], data=redwines$alcohol)
# Change quality to a factor to categorize values
redwines$quality <- as.factor(redwines$quality)
ggplot(redwines, aes(quality, alcohol)) +
geom_boxplot()
